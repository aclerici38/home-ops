---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

vars:
  TALHELPER_CLUSTER_DIR: '{{.KUBERNETES_DIR}}/bootstrap/talos/clusterconfig'
  TALHELPER_SECRET_FILE: '{{.KUBERNETES_DIR}}/bootstrap/talos/talsecret.sops.yaml'
  TALHELPER_CONFIG_FILE: '{{.KUBERNETES_DIR}}/bootstrap/talos/talconfig.yaml'
  CLUSTER_DIR: '{{.ROOT_DIR}}/kubernetes'
  KUBE_BOOTSTRAP_DIR: '/Users/anthony/home-ops/kubernetes/bootstrap'

env:
  TALOSCONFIG: '{{.TALHELPER_CLUSTER_DIR}}/talosconfig'

tasks:
  apps:
    desc: Bootstrap Apps
    prompt: Bootstrap apps into the {{.CLUSTER}} Talos cluster?
    cmds:
      - op run --env-file {{.KUBE_BOOTSTRAP_DIR}}/.secrets.env --no-masking -- bash -c 'export ONEPASSWORD_CREDENTIALS_B64=$(echo "$ONEPASSWORD_CREDENTIALS" | base64) && minijinja-cli --env {{.KUBE_BOOTSTRAP_DIR}}/apps/{{.CLUSTER}}/resources.yaml.j2' | kubectl apply --server-side --filename -
      - helmfile --file {{.KUBE_BOOTSTRAP_DIR}}/apps/{{.CLUSTER}}/helmfile.yaml apply --skip-diff-on-install --suppress-diff
    vars:
      CLUSTER: '{{.CLUSTER | default "apartment"}}'
    env:
      FLUX_GITHUB_PUBLIC_KEYS:
        sh: curl -fsSL https://api.github.com/meta | jq --raw-output '"github.com "+.ssh_keys[]'
      VAULT: Kubernetes
    preconditions:
      - op user get --me
      - talosctl config info
      - talosctl config context {{.CLUSTER}} >/dev/null 2>&1
      - kubectl config use-context admin@{{.CLUSTER}} >/dev/null 2>&1
      - test -f {{.KUBE_BOOTSTRAP_DIR}}/.secrets.env
      - test -f {{.KUBE_BOOTSTRAP_DIR}}/apps/{{.CLUSTER}}/resources.yaml.j2
      - test -f {{.KUBE_BOOTSTRAP_DIR}}/apps/{{.CLUSTER}}/helmfile.yaml
      - which curl jq helmfile kubectl op talosctl minijinja-cli

