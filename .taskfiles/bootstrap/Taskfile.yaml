---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

vars:
  GITHUB_DEPLOY_KEY_FILE: '{{.KUBERNETES_DIR}}/bootstrap/flux/github-deploy-key.sops.yaml'
  TALHELPER_CLUSTER_DIR: '{{.KUBERNETES_DIR}}/bootstrap/talos/clusterconfig'
  TALHELPER_SECRET_FILE: '{{.KUBERNETES_DIR}}/bootstrap/talos/talsecret.sops.yaml'
  TALHELPER_CONFIG_FILE: '{{.KUBERNETES_DIR}}/bootstrap/talos/talconfig.yaml'
  CLUSTER_DIR: '{{.ROOT_DIR}}/kubernetes'
  KUBE_BOOTSTRAP_DIR: '{{.CLUSTER_DIR}}/bootstrap'

env:
  TALOSCONFIG: '{{.TALHELPER_CLUSTER_DIR}}/talosconfig'

tasks:

  talos:
    desc: Bootstrap the Talos cluster
    dotenv: ['{{.BOOTSTRAP_DIR}}/.cluster.env']
    dir: '{{.KUBERNETES_DIR}}/bootstrap/talos'
    cmds:
      - '{{if eq .TALHELPER_SECRET_EXISTS "false"}}talhelper gensecret > {{.TALHELPER_SECRET_FILE}}{{end}}'
      - '{{if eq .TALHELPER_SECRET_EXISTS "false"}}sops --encrypt --in-place {{.TALHELPER_SECRET_FILE}}{{end}}'
      - talhelper genconfig --config-file {{.TALHELPER_CONFIG_FILE}} --secret-file {{.TALHELPER_SECRET_FILE}} --out-dir {{.TALHELPER_CLUSTER_DIR}}
      - talhelper gencommand apply --config-file {{.TALHELPER_CONFIG_FILE}} --out-dir {{.TALHELPER_CLUSTER_DIR}} | bash
      - until talhelper gencommand bootstrap --config-file {{.TALHELPER_CONFIG_FILE}} --out-dir {{.TALHELPER_CLUSTER_DIR}} | bash; do sleep 10; done
      - until talhelper gencommand kubeconfig --config-file {{.TALHELPER_CONFIG_FILE}} --out-dir {{.TALHELPER_CLUSTER_DIR}} --extra-flags="{{.ROOT_DIR}} --force" | bash; do sleep 10; done
    vars:
      TALHELPER_SECRET_EXISTS:
        sh: test -f {{.TALHELPER_SECRET_FILE}} && echo true || echo false
    preconditions:
      - test -f {{.SOPS_CONFIG_FILE}}
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - test -f {{.TALHELPER_CONFIG_FILE}}
      - which talhelper sops

  apps:
    desc: Bootstrap Apps
    prompt: Bootstrap apps into the Talos cluster?
    cmds:
      - until kubectl wait nodes --for=condition=Ready=False --all --timeout=10m; do sleep 5; done
      - op run --env-file {{.KUBE_BOOTSTRAP_DIR}}/.secrets.env --no-masking -- bash -c 'export ONEPASSWORD_CREDENTIALS_B64=$(echo "$ONEPASSWORD_CREDENTIALS" | base64) && minijinja-cli --env {{.KUBE_BOOTSTRAP_DIR}}/apps/templates/resources.yaml.j2' | kubectl apply --server-side --filename -
      - helmfile --file {{.KUBE_BOOTSTRAP_DIR}}/apps/helmfile.yaml apply --skip-diff-on-install --suppress-diff
    env:
      FLUX_GITHUB_PUBLIC_KEYS:
        sh: curl -fsSL https://api.github.com/meta | jq --raw-output '"github.com "+.ssh_keys[]'
      NODE_COUNT:
        sh: talosctl config info --output json | jq --raw-output '.nodes | length'
      VAULT: Kubernetes
    preconditions:
      - op user get --me
      - talosctl config info
      - test -f {{.TALHELPER_CLUSTER_DIR}}/talosconfig
      - test -f {{.KUBE_BOOTSTRAP_DIR}}/.secrets.env
      - test -f {{.KUBE_BOOTSTRAP_DIR}}/apps/helmfile.yaml
      - test -f {{.KUBE_BOOTSTRAP_DIR}}/apps/templates/resources.yaml.j2
      - which curl jq helmfile kubectl op talosctl minijinja-cli
