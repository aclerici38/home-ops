---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app fileflows
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  dependsOn:
    - name: nvidia-device-plugin
      namespace: kube-system
  install:
    timeout: 5m
    remediation:
      retries: 1
  upgrade:
    timeout: 2m
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 1
  values:
    controllers:
      server:
        pod:
          hostname: ff-server
        containers:
          app:
            image:
              repository: docker.io/ant385525/fileflows-server
              tag: latest
              pullPolicy: Always
            env:
              TZ: "${TZ}"
              SQLITE_TMPDIR: &sqliteTmp /tmp/sqlite/
            resources: &resources
              requests:
                cpu: 100m
                memory: 350M
              limits:
                memory: 6Gi
                nvidia.com/gpu: 1
            securityContext: &secOps
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                  - ALL
      node:
        pod:
          hostname: ff-local-node
          shareProcessNamespace: true
        containers:
          app:
            image:
              repository: docker.io/ant385525/fileflows-node
              tag: latest
              pullPolicy: Always
            env:
              TZ: "${TZ}"
              ServerUrl: http://fileflows:5000
            resources: *resources
            securityContext: *secOps
          # Run ebook2audiobook in same pod until api exists
          ebook2audiobook:
            image:
              repository: docker.io/athomasson2/ebook2audiobook
              tag: 25.2.18@sha256:daaf42fe320b83ab1be77ae2b1b88741e25a77fa35e532b42fb60fa17adcb29c
            env:
              TZ: ${TZ}
              MPLCONFIGDIR: /home/user/app/models/matplotlib
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 4Gi
              limits:
                nvidia.com/gpu: 1
                memory: 12Gi
    defaultPodOptions:
      runtimeClassName: nvidia
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: Always
        seccompProfile: { type: RuntimeDefault }
      nodeSelector:
        kubernetes.io/hostname: "bonds"
    service:
      *app :
        controller: server
        ports:
          http:
            port: 5000
      ebook2audiobook:
        controller: node
        ports:
          http:
            port: 7860
    ingress:
      *app :
        className: internal
        hosts:
          - host: "fileflows.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: *app
                  port: http
      ebook2audiobook:
        className: internal
        hosts:
          - host: "ebook2audio.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: ebook2audiobook
                  port: http
    persistence:
      config:
        existingClaim: *app
        advancedMounts:
          server:
            app:
              - path: /app/Data
      node-data:
        type: emptyDir
        advancedMounts:
          node:
            app:
              - path: /app/Data
      server-logs:
        enabled: true
        existingClaim: fileflows-logs
        advancedMounts:
          server:
            app:
              - path: /app/Logs
      node-logs:
        enabled: true
        type: emptyDir
        sizeLimit: 1Gi
        advancedMounts:
          node:
            app:
              - path: /app/Logs
      temp:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /temp
      server-common:
        existingClaim: fileflows-server-common
        advancedMounts:
          server:
            app:
              - path: /app/common
      node-common:
        existingClaim: fileflows-node-common
        advancedMounts:
          node:
            app:
              - path: /app/common
      dockermods:
        type: emptyDir
        globalMounts:
          - path: /app/DockerMods
      manually-added:
        type: emptyDir
        globalMounts:
          - path: /app/ManuallyAdded
      sqlite-tmp:
        type: emptyDir
        medium: Memory
        globalMounts:
          - path: *sqliteTmp
      ebook2audio-cache:
        existingClaim: ebook2audiobook-cache
        advancedMounts:
          node:
            ebook2audiobook:
              - path: /home/user/app/models
      media:
        enabled: true
        type: nfs
        server: 192.168.9.10
        path: /mnt/tank/media
        globalMounts:
          - path: /allMedia
