---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app fileflows
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  dependsOn:
    - name: nvidia-device-plugin
      namespace: kube-system
  install:
    timeout: 5m
    remediation:
      retries: 1
  upgrade:
    timeout: 2m
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 1
  values:
    controllers:
      main:
        pod:
          hostname: ff-server
          runtimeClassName: nvidia
          securityContext:
            runAsNonRoot: false
            fsGroupChangePolicy: Always
          nodeSelector:
            kubernetes.io/hostname: "bonds"
        containers:
          app:
            lifecycle:
              postStart:
                exec:
                  command:
                    - "/bin/sh"
                    - "-c"
                    - cd /app && git clone https://github.com/DrewThomasson/ebook2audiobook.git#${EBOOK2AUDIO_VERSION}
            image:
              repository: docker.io/revenz/fileflows
              tag: 25.02@sha256:54ae364c9ea13423a370444f2a24b77ff8f27e3e55975f71550d3f4d74c51a24
            env:
              SQLITE_TMPDIR: &sqliteTmp /tmp/sqlite/
              PUID: 1000
              PGID: 1000
            resources: &resources
              requests:
                cpu: 100m
                memory: 350M
              limits:
                memory: 6Gi
                nvidia.com/gpu: 1
            securityContext: &secOps
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: false
    service:
      *app :
        controller: main
        ports:
          http:
            port: 5000
    ingress:
      *app :
        className: internal
        hosts:
          - host: "fileflows.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: *app
                  port: http
    serviceAccount:
      create: false
      name: *app
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /app/Data
      logs:
        enabled: true
        existingClaim: fileflows-logs
        globalMounts:
          - path: /app/Logs
      temp:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /temp
      common:
        existingClaim: fileflows-common
        globalMounts:
          - path: /app/common
      dockermods:
        type: emptyDir
        globalMounts:
          - path: /app/DockerMods
      manually-added:
        type: emptyDir
        globalMounts:
          - path: /app/ManuallyAdded
      sqlite-tmp:
        type: emptyDir
        medium: Memory
        globalMounts:
          - path: *sqliteTmp
      calibre-library:
        existingClaim: calibre-library
        globalMounts:
          - path: /mnt/calibre-library
      ebook2audio:
        type: emptyDir
        globalMounts:
          - path: /app/ebook2audiobook
      media:
        enabled: true
        type: nfs
        server: 10.38.55.50
        path: /mnt/tank/media
        globalMounts:
          - path: /allMedia
