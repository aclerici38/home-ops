---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cloudflare-ddns
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      ${APP}:
        strategy: RollingUpdate
        pod:
          hostUsers: false
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            seccompProfile: { type: RuntimeDefault }
        containers:
          main:
            image:
              repository: ghcr.io/larivierec/cloudflare-ddns
              tag: v1.1.0@sha256:c4cf9ffe97f6aff0d26308fd4d452c7ad10530f8f9fc061f8d4d7866b55bdeb2
            args:
              - --zone-name
              - ${SECRET_DOMAIN}
              - --record-name
              - apartment.${SECRET_DOMAIN}
              - --provider
              - random
            env:
              ACCOUNT_TOKEN:
                valueFrom:
                  secretKeyRef:
                    name: cloudflare-secret
                    key: CLOUDFLARE_API_TOKEN
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health/alive
                    port: &healthPort 8080
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health/ready
                    port: *healthPort
            resources:
              requests:
                memory: 64Mi
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    service:
      main:
        controller: ${APP}
        ports:
          http:
            port: 9000
          health:
            port: *healthPort
    serviceMonitor:
      apartment:
        serviceName: main
        endpoints:
          - port: health
            scheme: http
            path: /metrics
            interval: 30s
            scrapeTimeout: 30s
