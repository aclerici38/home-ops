---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app wg-easy
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      main:
        pod:
          nodeSelector:
            location: cloud
          tolerations:
            - key: "location"
              operator: "Equal"
              value: "cloud"
              effect: "NoSchedule"
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
            runAsGroup: 0
            fsGroup: 0
            fsGroupChangePolicy: Always
        containers:
          *app :
            image:
              repository: ghcr.io/wg-easy/wg-easy
              tag: 14@sha256:66352ccb4b5095992550aa567df5118a5152b6ed31be34b0a8e118a3c3a35bf5
            env:
              LANG: EN
              WG_HOST: &host cloud.${SECRET_DOMAIN}
              WG_DEFAULT_DNS: &dns 172.17.0.11 # blocky
              WG_PORT: &wgPort 123
              WG_MTU: 1280 # Geneve + wireguard
              WG_PERSISTENT_KEEPALIVE: 25
              WG_ALLOWED_IPS: 0.0.0.0/0
              UI_TRAFFIC_STATS: "true"
              UI_CHART_TYPE: 1
            resources:
              requests:
                cpu: 50m
              limits:
                memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: false
              capabilities:
                add:
                  - NET_ADMIN
                  # - SYS_MODULE
                  - NET_RAW
                drop:
                  - ALL
    service:
      ui:
        controller: main
        primary: true
        ports:
          http:
            port: &uiPort 51821
      wg:
        controller: main
        type: NodePort
        ports:
          vpn:
            targetPort: *wgPort
            port: *wgPort
            nodePort: *wgPort
            protocol: UDP
    route:
      *app :
        hostnames:
          - ${APP}.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *uiPort
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /etc/wireguard
