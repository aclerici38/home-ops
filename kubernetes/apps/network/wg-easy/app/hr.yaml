---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app wg-easy
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      *app :
        type: statefulset
        pod:
          hostUsers: false
          nodeSelector:
            location: cloud
          tolerations:
            - key: "location"
              operator: "Equal"
              value: "cloud"
              effect: "NoSchedule"
          securityContext:
            runAsNonRoot: true
            runAsUser: 0
            runAsGroup: 0
            seccompProfile: { type: RuntimeDefault }
        containers:
          main:
            image:
              repository: ghcr.io/wg-easy/wg-easy
              tag: 15.0.0@sha256:07ed8f95eeeb4082c2e6afe3f5f3991723f496a21dd2dc25860b119a728b9ab0
            envFrom:
              - secretRef:
                  name: ${APP}-secret
            resources:
              requests:
                cpu: 50m
              limits:
                memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                add:
                  - NET_ADMIN
                  - NET_BIND_SERVICE
                  # - SYS_MODULE
                  - NET_RAW
                drop:
                  - ALL
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  exec:
                    command:
                      - /bin/sh
                      - -c
                      - "/usr/bin/wg show | /bin/grep -q interface || exit 1"
    service:
      ui:
        controller: *app
        primary: true
        ports:
          http:
            port: &uiPort 51821
      wg:
        controller: *app
        type: NodePort
        ports:
          vpn:
            targetPort: 123
            port: 123
            nodePort: 123
            protocol: UDP
    route:
      main:
        hostnames:
          - ${APP}.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: ui
                port: *uiPort
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /etc/wireguard
      run:
        type: emptyDir
