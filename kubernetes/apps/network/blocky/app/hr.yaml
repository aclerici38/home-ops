---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: blocky
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      apartment:
        strategy: RollingUpdate
        replicas: 2
        rollingUpdate:
          surge: 1
          unavailable: 1
        pod:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchLabels:
                      app.kubernetes.io/controller: apartment
                      app.kubernetes.io/instance: blocky
                  topologyKey: kubernetes.io/hostname
          nodeSelector:
            location: apartment
        containers: &container
          main:
            image:
              repository: ghcr.io/0xerr0r/blocky
              tag: v0.26.2@sha256:46150ee0a8a414170ac861343ab7640eb0182a736f7d59f4c0c41383443932fd
            env:
              PGCONNECT_TIMEOUT: 10
              PGHOST:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-db-app
                    key: host
              PGPORT:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-db-app
                    key: port
              PGUSER:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-db-app
                    key: username
              PGPASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-db-app
                    key: password
              PGDATABASE:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-db-app
                    key: dbname
            probes:
              readiness: &probes
                enabled: true
                custom: true
                spec:
                  exec:
                    command:
                      - /app/blocky
                      - healthcheck
              liveness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 0
              limits:
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                add:
                  - NET_BIND_SERVICE
                drop:
                  - ALL
      house:
        strategy: RollingUpdate
        pod:
          nodeSelector:
            location: house
        containers: *container
      k8s:
        strategy: RollingUpdate
        replicas: 2
        containers: *container
    defaultPodOptions:
      hostUsers: false
      tolerations:
        - key: "location"
          operator: "Equal"
          value: "house"
          effect: "NoSchedule"
        - key: "location"
          operator: "Equal"
          value: "cloud"
          effect: "NoSchedule"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        seccompProfile: { type: RuntimeDefault }
    service:
      apartment: &svc
        controller: apartment
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: "${BLOCKY_APT_LB_IP}"
        ports: &p
          dns-tcp:
            port: 53
          dns-udp:
            port: 53
            protocol: UDP
          dns-tls:
            port: 853
      house:
        <<: *svc
        controller: house
        annotations:
          lbipam.cilium.io/ips: "${BLOCKY_HOUSE_LB_IP}"
      k8s:
        controller: k8s
        clusterIP: "${BLOCKY_CLUSTER_IP}"
        ports: *p
    persistence:
      config:
        type: configMap
        name: blocky-config
        globalMounts:
          - path: /app/config.yml
            subPath: config.yml
            readOnly: true
      allow:
        type: configMap
        name: blocky-allowlist
        globalMounts:
          - path: /allow.txt
            subPath: allow.txt
