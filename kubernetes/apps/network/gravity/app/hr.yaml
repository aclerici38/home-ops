---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gravity
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  dependsOn:
    - name: gravity-etcd
  values:
    controllers:
      apartment:
        type: deployment
        strategy: Recreate # multus
        pod:
          hostname: gravity-apartment
          nodeSelector:
            location: apartment
          annotations:
            k8s.v1.cni.cncf.io/networks: |
              [
                {
                  "name":"multus-apt-lan-net",
                  "namespace": "network",
                  "ips": ["192.168.1.38/24"],
                  "mac": "64:16:7F:79:24:FD"
                }
              ]
        containers:
          main: &container
            dependsOn: grpc-proxy
            image:
              repository: ghcr.io/beryju/gravity
              tag: v0.27.0@sha256:bb9c210959b09d0a4bee5c707ff4ac9a4bd376e14c818fc00331b16d16ebc79a
            env: &env
              BOOTSTRAP_ROLES: "dns;dhcp;backup;discovery;monitoring;tsdb"
              ETCD_ENDPOINT: 127.0.0.1:23790
              LOG_LEVEL: debug
              INSTANCE_IP: 192.168.1.38
              INSTANCE_LISTEN: 0.0.0.0
            envFrom:
              - secretRef:
                  name: ${APP}-secret
            probes:
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: &metrics 8009
                    path: /healthz/ready
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: *metrics
                    path: /healthz/live
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 200Mi
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: true
              runAsNonRoot: false
              # Need to run as root for nmap?
              runAsUser: 0
              runAsGroup: 0
              capabilities:
                add:
                  - NET_BIND_SERVICE
                  - NET_RAW
                  - NET_ADMIN
                drop:
                  - ALL
          grpc-proxy: &proxy
            image:
              repository: quay.io/coreos/etcd
              tag: v3.6.1
            command: ["etcd"]
            args:
              - grpc-proxy
              - start
              - --listen-addr=0.0.0.0:23790
              - --endpoints=http://gravity-etcd-0.gravity-etcd.network.svc:2379,http://gravity-etcd-1.gravity-etcd.network.svc:2379,http://gravity-etcd-2.gravity-etcd.network.svc:2379
              - --dial-keepalive-time=5s
              - --dial-keepalive-timeout=10s
              - --metrics-addr=http://0.0.0.0:4443
            probes:
              readiness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: 4443
                    path: /health
              liveness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 40Mi
              limits:
                memory: 200Mi
            securityContext:
              securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              runAsNonRoot: false
              runAsUser: 1000
              runAsGroup: 1000
              capabilities:
                drop:
                  - ALL
      house:
        type: deployment
        strategy: Recreate # multus
        pod:
          hostname: gravity-house
          tolerations:
            - key: "location"
              operator: "Equal"
              value: "house"
              effect: "NoSchedule"
          nodeSelector:
            location: house
          annotations:
            k8s.v1.cni.cncf.io/networks: |
              [
                {
                  "name":"multus-house-lan-net",
                  "namespace": "network",
                  "ips": ["10.0.40.38/24"],
                  "mac": "64:16:7F:82:62:EB"
                }
              ]
        containers:
          main:
            <<: *container
            env:
              <<: *env
              INSTANCE_IP: 10.0.40.38
          grpc-proxy: *proxy
      k8s:
        type: statefulset
        replicas: 2
        strategy: RollingUpdate
        pod:
          tolerations:
            - key: "location"
              operator: "Equal"
              value: "cloud"
              effect: "NoSchedule"
            - key: "location"
              operator: "Equal"
              value: "house"
              effect: "NoSchedule"
          nodeSelector:
            location: cloud
        containers:
          main:
            <<: *container
            env:
              <<: *env
              LISTEN_ONLY: true
              BOOTSTRAP_ROLES: "dns;api;backup;monitoring;tsdb"
          grpc-proxy: *proxy
    defaultPodOptions:
      securityContext:
        seccompProfile: { type: RuntimeDefault }
    service:
      main:
        controller: k8s
        ports:
          http:
            port: &port 8008
          metrics:
            port: *metrics
      dns:
        controller: k8s
        clusterIP: 172.17.0.14
        ports:
          dns-tcp:
            protocol: TCP
            port: 53
          dns-udp:
            protocol: UDP
            port: 53
    route:
      main:
        hostnames:
          - ${APP}.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: main
                port: *port
    persistence:
      data:
        type: emptyDir
      run:
        type: emptyDir
        globalMounts:
          - path: /var/run
      allowlist:
        type: configMap
        name: dns-allowlist
        globalMounts:
          - path: /allow.txt
            subPath: allow.txt
