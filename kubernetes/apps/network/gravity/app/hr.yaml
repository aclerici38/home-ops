---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gravity
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  dependsOn:
    - name: gravity-etcd
  values:
    controllers:
      apartment:
        type: deployment
        replicas: &replicas 1
        pod:
          hostname: gravity-apartment
          nodeSelector:
            location: apartment
          annotations:
            k8s.v1.cni.cncf.io/networks: |
              [
                {
                  "name":"multus-apt-lab-net",
                  "namespace": "network",
                  "ips": ["192.168.9.38/24"],
                  "mac": "64:16:7F:79:24:FD"
                }
              ]
        containers:
          main: &container
            dependsOn: grpc-proxy
            image:
              repository: ghcr.io/beryju/gravity
              tag: latest
            env: &env
              BOOTSTRAP_ROLES: "dns;dhcp;api;backup;discovery;monitoring;debug;tsdb"
              ETCD_ENDPOINT: 127.0.0.1:23790
              # LOG_LEVEL: debug
              INSTANCE_IP: 10.38.55.30
              INSTANCE_LISTEN: 0.0.0.0
              INSTANCE_IDENTIFIER: apartment
            envFrom:
              - secretRef:
                  name: ${APP}-secret
            probes:
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: &metrics 8009
                    path: /healthz/ready
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: *metrics
                    path: /healthz/live
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 200Mi
            securityContext: &sec
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
          grpc-proxy: &proxy
            image:
              repository: quay.io/coreos/etcd
              tag: v3.6.1
            command: ["etcd"]
            args:
              - grpc-proxy
              - start
              - --listen-addr=0.0.0.0:23790
              - --endpoints=http://gravity-etcd-0.gravity-etcd.network.svc:2379,http://gravity-etcd-1.gravity-etcd.network.svc:2379,http://gravity-etcd-2.gravity-etcd.network.svc:2379
              - --dial-keepalive-time=5s
              - --dial-keepalive-timeout=10s
              - --metrics-addr=http://0.0.0.0:4443
            probes:
              readiness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: 4443
                    path: /health
              liveness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 40Mi
              limits:
                memory: 200Mi
            securityContext: *sec
      house:
        type: deployment
        replicas: *replicas
        pod:
          hostname: gravity-house
          tolerations:
            - key: "location"
              operator: "Equal"
              value: "house"
              effect: "NoSchedule"
          nodeSelector:
            location: house
          annotations:
            k8s.v1.cni.cncf.io/networks: |
              [
                {
                  "name":"multus-house-lab-net",
                  "namespace": "network",
                  "ips": ["10.0.30.38/24"],
                  "mac": "64:16:7F:82:62:EB"
                }
              ]
        containers:
          main:
            <<: *container
            env:
              <<: *env
              INSTANCE_IP: 10.0.30.38
              INSTANCE_IDENTIFIER: house
          grpc-proxy: *proxy
      cloud:
        type: deployment
        strategy: RollingUpdate
        replicas: *replicas
        pod:
          hostname: gravity-cloud
          tolerations:
            - key: "location"
              operator: "Equal"
              value: "cloud"
              effect: "NoSchedule"
          nodeSelector:
            location: cloud
        containers:
          main:
            <<: *container
            env:
              <<: *env
              INSTANCE_IDENTIFIER: cloud
              LISTEN_ONLY: true
          grpc-proxy: *proxy
    defaultPodOptions:
      hostUsers: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        seccompProfile: { type: RuntimeDefault }
    service:
      http:
        controller: apartment
        extraSelectorLabels: &esl
          app.kubernetes.io/instance: ${APP}
        ports:
          http:
            port: &port 8008
          metrics:
            port: 8009
      dns:
        controller: apartment
        extraSelectorLabels: *esl
        ports:
          dns-tcp:
            port: 53
            protocol: TCP
          dns-udp:
            primary: true
            port: 53
            protocol: UDP
          dhcp:
            port: 67
            protocol: UDP
    route:
      main:
        hostnames:
          - ${APP}.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: http
                port: *port
    persistence:
      data:
        type: emptyDir
      run:
        type: emptyDir
        globalMounts:
          - path: /var/run
