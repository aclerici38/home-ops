---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gravity
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  dependsOn:
    - name: gravity-etcd
  values:
    controllers:
      gravity:
        type: statefulset
        strategy: RollingUpdate
        replicas: 6
        pod:
          # hostUsers: false
          tolerations:
            - key: "location"
              operator: "Equal"
              value: "house"
              effect: "NoSchedule"
            - key: "location"
              operator: "Equal"
              value: "cloud"
              effect: "NoSchedule"
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: gravity
          # securityContext:
          #   runAsNonRoot: true
          #   runAsUser: 1000
          #   runAsGroup: 1000
          #   seccompProfile: { type: RuntimeDefault }
        containers:
          main:
            image:
              repository: ghcr.io/beryju/gravity
              tag: v0.27.0@sha256:bb9c210959b09d0a4bee5c707ff4ac9a4bd376e14c818fc00331b16d16ebc79a
            env:
              BOOTSTRAP_ROLES: "dns;dhcp;api;discovery;monitoring;tsdb"
              ETCD_ENDPOINT: gravity-etcd.network.svc:2379
              LOG_LEVEL: debug
              INSTANCE_IP: &lbIp 10.38.55.30
              INSTANCE_LISTEN: 0.0.0.0
              INSTANCE_IDENTIFIER: k8s
            envFrom:
              - secretRef:
                  name: ${APP}-secret
            probes:
              readiness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: &metrics 8009
                    path: /healthz/ready
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: *metrics
                    path: /healthz/live
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi
            securityContext: &sec
              privileged: true
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: true
    service:
      http:
        controller: ${APP}
        ports:
          http:
            port: &port 8008
          metrics:
            port: 8009
      internal-dns:
        controller: ${APP}
        ports: &ports
          dns-tcp:
            port: 53
            protocol: TCP
          dns-udp:
            primary: true
            port: 53
            protocol: UDP
          dns-tls:
            port: 853
            protocol: TCP
          dhcp:
            port: 67
            protocol: UDP
      external-dns:
        controller: ${APP}
        type: LoadBalancer
        externalTrafficPolicy: Local
        annotations:
          lbipam.cilium.io/ips: 10.38.55.30
        ports: *ports
    route:
      main:
        hostnames:
          - ${APP}.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: http
                port: *port
