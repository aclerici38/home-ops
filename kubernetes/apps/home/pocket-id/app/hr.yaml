---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app pocket-id
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      main:
        pod:
          hostUsers: false
          nodeSelector:
            location: cloud
          tolerations:
            - key: "location"
              operator: "Equal"
              value: "cloud"
              effect: "NoSchedule"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: Always
            seccompProfile: { type: RuntimeDefault }
        strategy: RollingUpdate
        containers:
          *app :
            image:
              repository: ghcr.io/pocket-id/pocket-id
              tag: v1.6.4-distroless@sha256:d821ced056be06eb813405c37343b58eac47b96ed615c3cbe2a27c586ef0d64d
            env:
              APP_URL: https://id.${SECRET_DOMAIN}
              TRUST_PROXY: "true"
              DB_PROVIDER: postgres
              UPDATE_CHECK_DISABLED: "true"
              SESSION_DURATION: 1440
              KEYS_STORAGE: database

              EMAIL_LOGIN_NOTIFICATION_ENABLED: true
              SMTP_HOST: smtp-relay.cluster-utilities.svc.cluster.local
              SMTP_PORT: 25
              SMTP_FROM: bot@${SECRET_DOMAIN}
              SMTP_TLS: none

              DB_CONNECTION_STRING:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-db-app
                    key: uri
            envFrom:
              - secretRef:
                  name: ${APP}-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  exec:
                    command: ["/app/pocket-id", "healthcheck"]
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 10Mi
              limits:
                memory: 256Mi
    service:
      main:
        controller: main
        ports:
          http:
            port: &port 1411
    route:
      main:
        hostnames:
          - id.${SECRET_DOMAIN}
        parentRefs:
          - name: external
            namespace: network
            sectionName: https
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - identifier: main
                port: *port
    persistence:
      data:
        type: emptyDir
        globalMounts:
          - path: /app/data
