---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app paperless
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      main:
        pod:
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
            runAsGroup: 0
            seccompProfile: { type: RuntimeDefault }
        containers:
          *app :
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.15.3
            env:
              PAPERLESS_URL: https://paperless.${SECRET_DOMAIN}
              PAPERLESS_TIME_ZONE: ${TZ}
              PAPERLESS_WEBSERVER_WORKERS: 3
              PAPERLESS_TASK_WORKERS: 6
              PAPERLESS_THREADS_PER_WORKER: 5
              PAPERLESS_CONSUMER_RECURSIVE: true
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: true
              PAPERLESS_FILENAME_FORMAT: "{{`{{`}} created_year {{`}}`}}/{{`{{`}} created_month {{`}}`}}/{{`{{`}} correspondent {{`}}`}}/{{`{{`}} title {{`}}`}}"
              PAPERLESS_OCR_LANGUAGE: eng
              PAPERLESS_REDIS: redis://dragonfly-db.database.svc.cluster.local:6379/0
              PAPERLESS_TIKA_ENABLED: true
              PAPERLESS_TIKA_ENDPOINT: http://paperless-tika:9998
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg:3000
              USERMAP_UID: 1000
              USERMAP_GID: 1000
              PAPERLESS_DISABLE_REGULAR_LOGIN: true
              PAPERLESS_SOCIAL_AUTO_SIGNUP: true
              PAPERLESS_APPS: allauth.socialaccount.providers.openid_connect
              PAPERLESS_DBENGINE: postgresql
              PAPERLESS_DBHOST:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-db-app
                    key: host
              PAPERLESS_DBUSER:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-db-app
                    key: user
              PAPERLESS_DBPASS:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-db-app
                    key: password
              PAPERLESS_DBNAME:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-db-app
                    key: dbname
            envFrom:
              - secretRef:
                  name: paperless-secret
            resources:
              requests:
                cpu: 25m
                memory: 2Gi
              limits:
                memory: 10Gi
            securityContext:
              runAsNonRoot: false
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                  - ALL
                add:
                  # S6
                  - CHOWN
                  - SETUID
                  - SETGID
                  - FOWNER
                  - DAC_OVERRIDE
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
      tika:
        strategy: RollingUpdate
        containers:
          tika:
            image:
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.1-minimal
            securityContext: &sc
              runAsNonRoot: true
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 6Gi
      gotenberg:
        strategy: RollingUpdate
        containers:
          gotenberg:
            image:
              repository: docker.io/gotenberg/gotenberg
              tag: 8.20.1@sha256:cda4386c7ed38f18bc6897828be01ba7361c99929a5c84ec5e293d7916e29bac
            command:
              - gotenberg
              - "--chromium-disable-javascript=true"
              - "--chromium-allow-list=file:///tmp/.*"
            securityContext: *sc
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 3000
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 6Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: Always
        seccompProfile: { type: RuntimeDefault }
    service:
      *app :
        controller: main
        ports:
          http:
            port: &port 8000
      tika:
        controller: tika
        ports:
          http:
            port: 9998
      gotenberg:
        controller: gotenberg
        ports:
          http:
            port: 3000
    route:
      *app :
        hostnames:
          - ${APP}.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
    persistence:
      data:
        existingClaim: *app
        advancedMounts:
          main:
            *app :
              - path: /usr/src/paperless/data
                subPath: data
              - path: /usr/src/paperless/media
                subPath: media
      files:
        existingClaim: files
        advancedMounts:
          main:
            *app :
              - path: /usr/src/paperless/consume
                subPath: documents
                readOnly: true
              - path: /usr/src/paperless/export
                subPath: paperless-export
      tmp:
        type: emptyDir
