---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app mealie
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    timeout: 2m
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 1
  values:
    controllers:
      main:
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.8@sha256:31864a9350264f10f25dae1e90db3c6705a9bbb90644a28600afe197b3bf917f
            env:
              - name: INIT_POSTGRES_SUPER_USER
                valueFrom:
                  secretKeyRef:
                    name: cnpg-secret
                    key: username
              - name: INIT_POSTGRES_SUPER_PASS
                valueFrom:
                  secretKeyRef:
                    name: cnpg-secret
                    key: password
              - name: INIT_POSTGRES_DBNAME
                valueFrom:
                  secretKeyRef:
                    name: mealie-secret
                    key: POSTGRES_DB
              - name: INIT_POSTGRES_HOST
                valueFrom:
                  secretKeyRef:
                    name: mealie-secret
                    key: POSTGRES_SERVER
              - name: INIT_POSTGRES_USER
                valueFrom:
                  secretKeyRef:
                    name: mealie-secret
                    key: POSTGRES_USER
              - name: INIT_POSTGRES_PASS
                valueFrom:
                  secretKeyRef:
                    name: mealie-secret
                    key: POSTGRES_PASSWORD
        containers:
          *app :
            image:
              repository: ghcr.io/mealie-recipes/mealie
              tag: v2.6.0@sha256:500e42e59eb89c7837d3b17274c99f0126de607a9c545b616d13eeb7d7df0cd3
            env:
              DB_ENGINE: postgres
              BASE_URL: https://mealie.${SECRET_DOMAIN}
              TZ: ${TZ}
              DAILY_SCHEDULE_TIME: 05:00
              ALLOW_SIGNUP: "false"
              LOG_LEVEL: debug

              # OIDC
              OIDC_AUTH_ENABLED: "true"
              OIDC_SIGNUP_ENABLED: "true"
              OIDC_PROVIDER_NAME: Authentik
              OIDC_REMEMBER_ME: "true"
              OIDC_USER_GROUP: "mealie_users"
              OIDC_ADMIN_GROUP: "mealie_admins"
              OIDC_USER_CLAIM: email
              OIDC_AUTO_REDIRECT: 'false'

              # ollama
              # OPENAI_BASE_URL: http://ollama.utilities:11434/v1
              # OPENAI_MODEL: llama3.2-vision-custom
              # OPENAI_WORKERS: 1
              # OPENAI_SEND_DATABASE_DATA: 'false'
              # OPENAI_REQUEST_TIMEOUT: 120

            envFrom:
              - secretRef:
                  name: mealie-secret
            securityContext:
              readOnlyRootFilesystem: true
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      *app :
        controller: main
        ports:
          http:
            port: 9000
    ingress:
      *app :
        className: external
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: "1g"
        hosts:
          - host: "mealie.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: *app
                  port: http

    persistence:
      config:
        existingClaim: mealie-data
        globalMounts:
          - path: /app/data
      # Needed for recipe parser
      tmp:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /tmp
