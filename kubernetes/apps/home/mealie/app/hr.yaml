---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app mealie
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      *app :
        type: statefulset
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            fsGroup: 65534
            fsGroupChangePolicy: Always
            seccompProfile: { type: RuntimeDefault }
        containers:
          main:
            image:
              repository: ghcr.io/mealie-recipes/mealie
              tag: v2.8.0@sha256:63aef46d90975d9cf9c0fdb9399fc2fe36acd222e1db6be99c504b9ccdbee967
            env:
              BASE_URL: https://mealie.${SECRET_DOMAIN}
              DAILY_SCHEDULE_TIME: 05:00
              ALLOW_SIGNUP: "false"
              LOG_LEVEL: debug

              # OIDC
              OIDC_AUTH_ENABLED: "true"
              OIDC_SIGNUP_ENABLED: "true"
              OIDC_PROVIDER_NAME: Pocket ID
              OIDC_REMEMBER_ME: "true"
              OIDC_USER_GROUP: "mealie_users"
              OIDC_USER_CLAIM: email
              OIDC_AUTO_REDIRECT: 'true'
              OIDC_CONFIGURATION_URL: https://id.${SECRET_DOMAIN}/.well-known/openid-configuration

              # ollama
              # OPENAI_BASE_URL: http://ollama.utilities:11434/v1
              # OPENAI_MODEL: llama3.2-vision-custom
              # OPENAI_WORKERS: 1
              # OPENAI_SEND_DATABASE_DATA: 'false'
              # OPENAI_REQUEST_TIMEOUT: 120

              # postgres
              DB_ENGINE: postgres
              POSTGRES_URL_OVERRIDE:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-db-app
                    key: uri

              # SMTP
              SMTP_HOST: smtp-relay.cluster-utilities.svc.cluster.local
              SMTP_PORT: 25
              SMTP_AUTH_STRATEGY: None
              SMTP_FROM_EMAIL: bot@${SECRET_DOMAIN}
            envFrom:
              - secretRef:
                  name: mealie-secret
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 2Gi
    service:
      main:
        controller: *app
        ports:
          http:
            port: &port 9000
    route:
      main:
        hostnames:
          - ${APP}.${SECRET_DOMAIN}
        parentRefs:
          - name: external
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: main
                port: *port
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /app/data
      # Needed for recipe parser
      tmp:
        type: emptyDir
      nonexistent:
        type: emptyDir
