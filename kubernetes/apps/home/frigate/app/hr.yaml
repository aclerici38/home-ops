---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: frigate
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      ${APP}:
        type: statefulset
        pod:
          # nodeSelector:
          #   kubernetes.io/hostname: "posey"
          # tolerations:
          #   - key: "location"
          #     operator: "Equal"
          #     value: "house"
          #     effect: "NoSchedule"
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
            runAsGroup: 0
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: Unconfined }
            supplementalGroups:
              - 44
        containers:
          main:
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: 0.16.0-beta4@sha256:0f39e8111ea7ad986d70b43bf572fe64a923c1e80fbdb3580f489c8db6edefd8
            env:
              YOLO_MODELS: yolov7x-320
              HF_HOME: /tmp
              S6_YES_I_WANT_A_WORLD_WRITABLE_RUN_BECAUSE_KUBERNETES: 1
              S6_READ_ONLY_ROOT: 1
            envFrom:
              - secretRef:
                  name: frigate-secret
            securityContext:
              allowPrivilegeEscalation: false
              # Frigate does in-place nginx config editing, so no true readonly root fs
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                  - ALL
                add:
                  # S6
                  - CHOWN
                  - SETUID
                  - SETGID
                  - FOWNER
                  - DAC_OVERRIDE
                  - PERFMON
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: &path /api/version
                    port: &http 5000
                  initialDelaySeconds: 5
                  periodSeconds: 15
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: *path
                    port: *http
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 60
            resources:
              requests:
                cpu: 1000m
                memory: 2Gi
              limits:
                memory: 16Gi
                gpu.intel.com/i915: 1
    service:
      main:
        controller: ${APP}
        type: ClusterIP
        ports:
          http-auth:
            port: &http-auth 8971
            targetPort: *http-auth
          http:
            primary: true
            port: *http
            targetPort: *http
          rtsp:
            port: &rtsp 8554
            targetPort: *rtsp
          webrtc:
            port: &webrtc 8555
            targetPort: *webrtc
    route:
      main:
        hostnames:
          - ${APP}.${SECRET_DOMAIN}
        parentRefs:
          - name: external
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
            - identifier: main
              port: *http
    persistence:
      config:
        existingClaim: ${APP}
      media:
        existingClaim: frigate-media
        globalMounts:
          - path: /media/frigate
      run:
        type: emptyDir
      tmp:
        type: emptyDir
      shm:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /dev/shm
      letsencrypt:
        type: emptyDir
        globalMounts:
          - path: /etc/letsencrypt
