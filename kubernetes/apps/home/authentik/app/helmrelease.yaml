---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2024.12.3
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  install:
    timeout: 5m
    remediation:
      retries: 1
  upgrade:
    timeout: 5m
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 1
  values:
    global:
      image:
        repository: ghcr.io/goauthentik/server
      env:
        - name: AUTHENTIK_REDIS__HOST
          value: authentik-dragonfly.home.svc.cluster.local
      envFrom:
        - secretRef:
            name: authentik-secret

    authentik:
      log_level: info
      error_reporting:
        enable: false
        send_pii: false

    server:
      initContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16.8@sha256:7c339ac0b2eb88ab41878ac3a71d342343fe7e830b7ccd2adb6c7b5bbee8d66b
          imagePullPolicy: IfNotPresent
          env:
            - name: INIT_POSTGRES_SUPER_USER
              valueFrom:
                secretKeyRef:
                  name: cnpg-secret
                  key: username
            - name: INIT_POSTGRES_SUPER_PASS
              valueFrom:
                secretKeyRef:
                  name: cnpg-secret
                  key: password
            - name: INIT_POSTGRES_DBNAME
              valueFrom:
                secretKeyRef:
                  name: authentik-secret
                  key: AUTHENTIK_POSTGRESQL__NAME
            - name: INIT_POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: authentik-secret
                  key: AUTHENTIK_POSTGRESQL__HOST
            - name: INIT_POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: authentik-secret
                  key: AUTHENTIK_POSTGRESQL__USER
            - name: INIT_POSTGRES_PASS
              valueFrom:
                secretKeyRef:
                  name: authentik-secret
                  key: AUTHENTIK_POSTGRESQL__PASSWORD

      replicas: 2
      pdb:
        enabled: true
        minAvailable: 1
        maxUnavailable: ""
      ingress:
        enabled: true
        ingressClassName: external
        hosts:
          - &host "auth.${SECRET_DOMAIN}"
        paths:
          - /
      metrics:
        serviceMonitor:
          enabled: true
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          memory: 2Gi

      volumeMounts:
        - name: custom
          mountPath: /custom

      volumes:
        - name: custom
          emptyDir: {}
    worker:
      replicas: 1
      pdb:
        enabled: true
      resources:
        requests:
          cpu: 50m
          memory: 512Mi
        limits:
          memory: 1Gi
    prometheus:
      rules:
        enabled: true

    postgresql:
      enabled: false
    redis:
      enabled: false
