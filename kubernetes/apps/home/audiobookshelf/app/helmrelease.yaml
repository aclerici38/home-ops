---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app audiobookshelf
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    timeout: 5m
    remediation:
      retries: 1
  upgrade:
    timeout: 2m
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 1
  values:
    controllers:
      main:
        pod:
          nodeSelector:
            kubernetes.io/hostname: "bonds"
          securityContext:
            runAsUser: &id 1000
            runAsGroup: *id
            fsGroup: *id
            fsGroupChangePolicy: OnRootMismatch
        containers:
          *app :
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.19.2@sha256:b7f7da1d46d3350798fdee0c1bcef298dfbdb2ed19b28a975630e51ddf54f6d3
            env:
              TZ: ${TZ}
              AUDIOBOOKSHELF_UID: &id 1000
              AUDIOBOOKSHELF_GID: *id
              CONFIG_PATH: /config
              METADATA_PATH: /config/metadata
              PORT: &port 8080
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
              privileged: true
              seccompProfile: { type: RuntimeDefault }
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: *port
              readiness: *probes
            resources:
              requests:
                cpu: 50m
                memory: 200Mi
              limits:
                memory: 5Gi
    service:
      *app :
        controller: main
        ports:
          http:
            port: *port
    ingress:
      *app :
        className: external
        hosts:
          - host: &fqdn "audiobookshelf.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: *app
                  port: http
    persistence:
      config:
        existingClaim: audiobookshelf
      media:
        type: nfs
        server: 192.168.9.10
        path: /mnt/tank/media
        globalMounts:
          - path: /allMedia
