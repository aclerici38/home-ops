---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: qui
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      ${APP}:
        strategy: RollingUpdate
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        containers:
          main:
            image:
              repository: ghcr.io/autobrr/qui
              tag: v1.1.0@sha256:5a04dda191387e545ee589bcedd0b04581bfc5321ed5fde3dc842aeaab0263af
            command: ["/bin/sh", "-c"]
            args:
              - echo "$password" | qui create-user --username "$username" --config-dir /data && exec qui serve
            env:
              QUI__METRICS_ENABLED: true
              QUI__METRICS_PORT: &mPort 9074
            envFrom:
              - secretRef:
                  name: ${APP}-secret
            resources:
              requests:
                cpu: 10m
                memory: 20Mi
              limits:
                memory: 200Mi
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz/liveness
                    port: &port 7476
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz/readiness
                    port: *port
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
    service:
      main:
        controller: ${APP}
        ports:
          http:
            port: *port
          metrics:
            port: *mPort
    serviceMonitor:
      ${APP}:
        serviceName: ${APP}
        endpoints:
          - port: metrics
    route:
      main:
        hostnames:
          - qui.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: envoy
            sectionName: https
        rules:
          - backendRefs:
            - identifier: main
              port: *port
    persistence:
      config:
        existingClaim: ${APP}
