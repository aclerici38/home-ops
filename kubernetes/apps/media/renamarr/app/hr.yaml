---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app renamarr
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      *app :
        type: cronjob
        cronjob:
          schedule: 0 3 * * *
          backoffLimit: 0
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
          startingDeadlineSeconds: 300
        pod:
          hostUsers: false
          securityContext:
            runAsGroup: 1000
            runAsUser: 1000
            runAsNonRoot: true
            seccompProfile: { type: RuntimeDefault }
        initContainers:
          fileflows-check:
            image:
              repository: docker.io/alpine/curl
              tag: latest
            command: ["/bin/sh", "-c"]
            args:
              - |
                apk add --no-cache jq;
                while true; do
                  echo "Checking fileflows status..."
                  STATUS=$(curl -s --max-time 3 http://fileflows-server:5000/api/status)
                  if [ $? -ne 0 ]; then
                    echo "fileflows unreachable, proceeding"
                    exit 0
                  fi

                  PROCESSING=$(echo "$STATUS" | jq '.processing // 0')
                  QUEUE=$(echo "$STATUS" | jq '.queue // 0')
                  echo "Processing: $PROCESSING, Queue: $QUEUE"

                  if [ "$PROCESSING" -eq 0 ] && [ "$QUEUE" -eq 0 ]; then
                    echo "Processing and Queue are both 0"
                    exit 0
                  fi

                  echo "Processing > 0, waiting"
                  sleep 120
                done
            securityContext:
              runAsUser: 0
              runAsGroup: 0
              runAsNonRoot: false
        containers:
          main:
            image:
              repository: ghcr.io/hollanbm/renamarr
              tag: 1.0.6@sha256:4795978d5edbeb087cc26c9c3874583ccab3f1327006efff8bd3541f8334c2b7
            env:
              EXTERNAL_CRON: true
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            resources:
              limits:
                memory: 200Mi
              requests:
                cpu: 10m
                memory: 50Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
    persistence:
      config:
        globalMounts:
          - path: /config/config.yml
            subPath: config.yml
            readOnly: true
        name: renamarr-config
        type: configMap
