---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app fileflows
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      server:
        type: statefulset
        containers:
          main: &container
            image:
              repository: ghcr.io/ant385525/fileflows
              tag: 25.7.2.5650@sha256:768583e73322f0ce59bd058b53514bae964cf7c44f47ede5d476333c9a897666
            env:
              PORT: &port 5000
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/status
                    port: *port
                  initialDelaySeconds: 5
                  periodSeconds: 5
                  failureThreshold: 5
              readiness: *probes
            resources:
              requests:
                cpu: 500m
                memory: 350M
              limits:
                # cpu: "16"
                memory: 12Gi
                gpu.intel.com/i915: 1
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
      node:
        type: statefulset
        containers:
          main:
            <<: *container
            probes:
              liveness: &probes
                enabled: false
              readiness: *probes
            env:
              FFNODE: 1
              ServerUrl: http://fileflows-server:5000
    service:
      server:
        controller: server
        ports:
          http:
            port: *port
      kube-bonds:
        controller: node
        ports:
          http:
            port: *port
    route:
      main:
        hostnames:
          - ${APP}.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: server
                port: *port
            timeouts:
              request: 0s
    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: Always
        runAsNonRoot: true
        seccompProfile: { type: RuntimeDefault }
        supplementalGroups: [44]
    persistence:
      config:
        existingClaim: *app
        advancedMounts:
          server:
            main:
              - path: /app/Data
      node-data:
        type: emptyDir
        advancedMounts:
          node:
            main:
              - path: /app/Data
      logs:
        enabled: true
        existingClaim: fileflows-logs
        advancedMounts:
          server:
            main:
              - path: /app/Logs
                subPath: ff-server
          node:
            main:
              - path: /app/Logs
                subPath: ff-kube-bonds
      manually-added:
        existingClaim: fileflows-manually-added
        globalMounts:
          - path: /app/ManuallyAdded
      temp:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /temp
            subPath: temp
          # Mutex
          - path: /tmp
            subPath: tmp
      dockermods:
        type: emptyDir
        globalMounts:
          - path: /app/DockerMods
      plugins:
        type: emptyDir
        globalMounts:
          - path: /app/Plugins
      templates:
        type: emptyDir
        globalMounts:
          - path: /app/Templates
      i18n:
        type: emptyDir
        globalMounts:
          - path: /app/Server/wwwroot/i18n
      media:
        existingClaim: media
        globalMounts:
          - path: /allMedia
