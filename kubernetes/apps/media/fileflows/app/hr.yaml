---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app fileflows
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      server:
        pod:
          hostname: &name ff-server
        containers:
          *name : &container
            image:
              repository: docker.io/revenz/fileflows
              tag: 25.04@sha256:f26308bbe29c2299680cb7bed008fbe0505aaf8d6e83d97dc0284061ca5bfcf6
            env: &env
              PUID: 1000
              PGID: 1000
            resources:
              requests:
                cpu: 100m
                memory: 350M
              limits:
                memory: 12Gi
                nvidia.com/gpu: 1
            securityContext: &secOps
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: false
      # node:
      #   pod:
      #     hostname: &name ff-kube-bonds
      #   containers:
      #     *name :
      #       <<: *container
      #       env:
      #         <<: *env
      #         FFNODE: 1
      #         ServerUrl: http://fileflows-server:5000
    service:
      server:
        controller: server
        ports:
          http:
            port: &port 5000
      # kube-bonds:
      #   controller: node
      #   ports:
      #     http:
      #       port: *port
    route:
      *app :
        hostnames:
          - ${APP}.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: server
                port: *port
            timeouts:
              request: 0s
    defaultPodOptions:
      runtimeClassName: nvidia
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        runAsNonRoot: false
    persistence:
      config:
        existingClaim: *app
        advancedMounts:
          server:
            ff-server:
              - path: /app/Data
      logs:
        enabled: true
        existingClaim: fileflows-logs
        advancedMounts:
          server:
            ff-server:
              - path: /app/Logs
                subPath: ff-server
          # node:
          #   ff-kube-bonds:
          #     - path: /app/Logs
          #       subPath: ff-kube-bonds
      temp:
        enabled: true
        type: emptyDir
        # Multiple nodes try to clean the same temp dir
        advancedMounts:
          server:
            ff-server:
              - path: /temp
                subPath: ff-server
          # node:
          #   ff-kube-bonds:
          #     - path: /temp
          #       subPath: ff-kube-bonds
      common:
        existingClaim: fileflows-common
        globalMounts:
          - path: /app/common
      dockermods:
        type: emptyDir
        globalMounts:
          - path: /app/DockerMods
      manually-added:
        type: emptyDir
        globalMounts:
          - path: /app/ManuallyAdded
      media:
        existingClaim: media
        globalMounts:
          - path: /allMedia
