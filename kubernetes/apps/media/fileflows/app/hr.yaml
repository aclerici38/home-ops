---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: fileflows
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      server:
        pod:
          hostname: ff-server
        containers:
          main: &container
            image:
              repository: ghcr.io/aclerici38/fileflows
              tag: 25.8.4.5880@sha256:72ab445e4413c307ef1563c267c5cdf1715e3cf585f91efbd7afc32d3c5f0a7b
            env:
              PORT: &port 5000
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/status
                    port: *port
                  initialDelaySeconds: 5
                  periodSeconds: 5
                  failureThreshold: 5
              readiness: *probes
            resources:
              requests:
                cpu: 500m
                memory: 350M
              limits:
                memory: 2Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
      # Wanna use sts but have nodes with different hardware/limits to set
      node-bonds:
        pod:
          hostname: ff-node-bonds
          nodeSelector:
            kubernetes.io/hostname: bonds
        containers:
          main:
            <<: *container
            resources:
              requests:
                cpu: 4
                memory: 350M
              limits:
                cpu: 12
                memory: 16Gi
                gpu.intel.com/i915: 1
            probes:
              liveness: &probes
                enabled: false
              readiness: *probes
            env:
              FFNODE: 1
              ServerUrl: http://fileflows-server:5000
      node-cain:
        pod:
          hostname: ff-node-cain
          nodeSelector:
            kubernetes.io/hostname: cain
        containers:
          main:
            <<: *container
            resources:
              requests:
                cpu: 4
                memory: 350M
              limits:
                cpu: 8
                memory: 8Gi
                gpu.intel.com/i915: 1
            probes:
              liveness: &probes
                enabled: false
              readiness: *probes
            env:
              FFNODE: 1
              ServerUrl: http://fileflows-server:5000
    service:
      server:
        controller: server
        ports: &ports
          http:
            port: *port
      node-bonds:
        controller: node-bonds
        ports: *ports
      node-cain:
        controller: node-cain
        ports: *ports
    route:
      main:
        hostnames:
          - ${APP}.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: server
                port: *port
            timeouts:
              request: 0s
    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        runAsNonRoot: true
        seccompProfile: { type: RuntimeDefault }
        supplementalGroups: [44]
    persistence:
      config:
        existingClaim: ${APP}
        advancedMounts:
          server:
            main:
              - path: /app/Data
      node-data:
        type: emptyDir
        advancedMounts:
          node-bonds:
            main:
              - path: /app/Data
          node-cain:
            main:
              - path: /app/Data
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /temp
            subPath: temp
          # Mutex
          - path: /tmp
            subPath: tmp
          - path: /app/Logs
            subPath: logs
          - path: /app/DockerMods
            subPath: dockermods
          - path: /app/Templates
            subPath: templates
          - path: /app/Server/wwwroot/i18n
            subPath: i18n
      media:
        existingClaim: media
        advancedMounts:
          server:
            main:
              - path: /allMedia
          node-bonds:
            main:
              - path: /allMedia
      media-nfs:
        type: nfs
        server: ${MEDIA_NFS_LB_IP}
        path: /
        advancedMounts:
          node-cain:
            main:
              - path: /allMedia
