---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 5m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 5m
    remediation:
      retries: 1
  values:
    controllers:
      ${APP}:
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
            supplementalGroups:
              - 44
        containers:
          main:
            image:
              repository: ghcr.io/jellyfin/jellyfin
              tag: 10.10.7@sha256:e4d1dc5374344446a3a78e43dd211247f22afba84ea2e5a13cbe1a94e1ff2141
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  periodSeconds: 5
                  failureThreshold: 20
                  initialDelaySeconds: 10
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 500Mi
              limits:
                # gpu.intel.com/i915: 1
                cpu: "16"
                memory: 16Gi
    service:
      main:
        controller: ${APP}
        ports:
          http:
            port: *port
    serviceMonitor:
      main:
        serviceName: ${APP}
        endpoints:
          - port: http
    route:
      main:
        hostnames:
          - ${APP}.${SECRET_DOMAIN}
        rules:
          # Block metrics path
          - matches:
              - path:
                  type: PathPrefix
                  value: /metrics
            backendRefs: []
          - backendRefs:
            - identifier: main
              port: *port
        parentRefs:
          - name: external
            namespace: network
            sectionName: https
    persistence:
      config:
        existingClaim: ${APP}
      cache:
        existingClaim: jellyfin-cache
        globalMounts:
          - path: /config/metadata
      media:
        type: nfs
        server: ${NFS_LB_IP}
        path: /
        globalMounts:
          - path: /allMedia
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /cache
            subPath: cache
          - path: /config/log
            subPath: log
          - path: /tmp
            subPath: tmp
