# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: komga
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      ${APP}:
        strategy: RollingUpdate
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: Always
            runAsNonRoot: true
            seccompProfile: { type: RuntimeDefault }
        containers:
          main:
            image:
              repository: ghcr.io/gotson/komga
              tag: 1.23.0@sha256:094dc0825d37950fef0132103bb4309b0e2fc38cdc90955b73528512be62ca59
            env:
              SERVER_PORT: &port 8080
              KOMGA_CORS_ALLOWED_ORIGINS: https://${APP}.${SECRET_DOMAIN}
              KOMGA_OAUTH2_ACCOUNT_CREATION: true
              SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_POCKETID_AUTHORIZATIONURI: https://id.${SECRET_DOMAIN}/authorize
              SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_POCKETID_ISSUERURI: https://id.${SECRET_DOMAIN}
              SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_POCKETID_JWKSETURI: https://id.${SECRET_DOMAIN}/.well-known/jwks.json
              SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_POCKETID_TOKENURI: https://id.${SECRET_DOMAIN}/api/oidc/token
              SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_POCKETID_USERINFOURI: https://id.${SECRET_DOMAIN}/api/oidc/userinfo
              SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_POCKETID_USERNAMEATTRIBUTE: sub
              SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_POCKETID_CLIENTNAME: komga
              SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_POCKETID_PROVIDER: pocketid
              SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_POCKETID_AUTHORIZATIONGRANTTYPE: authorization_code
              SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_POCKETID_REDIRECTURI: "{baseUrl}/{action}/oauth2/code/{registrationId}"
              SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_POCKETID_SCOPE: openid,email,profile
              SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_POCKETID_CLIENTID:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-secret
                    key: CLIENT_ID
              SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_POCKETID_CLIENTSECRET:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-secret
                    key: CLIENT_SECRET
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /actuator/health
                    port: *port
              readiness: *probes
            resources:
              requests:
                cpu: 15m
                memory: 1Gi
              limits:
                memory: 4Gi
            securityContext:
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
              allowPrivilegeEscalation: false
    service:
      main:
        controller: ${APP}
        ports:
          http:
            port: *port
    route:
      main:
        hostnames:
          - ${APP}.${SECRET_DOMAIN}
        parentRefs:
          - name: external
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
            - identifier: main
              port: *port
            timeouts:
              request: 0s
    persistence:
      config:
        existingClaim: ${APP}
      library:
        existingClaim: media
        globalMounts:
          - path: /calibre-library
            subPath: books/calibre/library
