---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app chaptarr
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      *app :
        type: statefulset
        pod:
          nodeSelector:
            kubernetes.io/hostname: "bonds"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: Always
            seccompProfile: { type: RuntimeDefault }
        containers:
          chaptarr:
            image:
              repository: docker.io/robertlordhood/chaptarr
              tag: beta@sha256:2fefc474e7b9c29ac29cdfe14b918857f671bf1996b97a48008b091a02e1f45b
            env:
              CHAPTARR__APP__INSTANCENAME: Chaptarr
              CHAPTARR__APP__THEME: dark
              CHAPTARR__AUTH__METHOD: External
              CHAPTARR__AUTH__REQUIRED: DisabledForLocalAddresses
              CHAPTARR__LOG__DBENABLED: "False"
              CHAPTARR__LOG__LEVEL: info
              CHAPTARR__SERVER__PORT: &port 8989
              CHAPTARR__POSTGRES__HOST:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-db-app
                    key: host
              CHAPTARR__POSTGRES__USER:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-db-app
                    key: username
              CHAPTARR__POSTGRES__PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-db-app
                    key: password
              CHAPTARR__POSTGRES__MAINDB:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-db-app
                    key: dbname
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 2Gi
    service:
      main:
        controller: *app
        ports:
          http:
            port: &port 8789
    route:
      main:
        hostnames:
          - ${APP}.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
            - identifier: main
              port: *port
            timeouts:
              request: 3m
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /config
      temp:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /tmp
      media:
        existingClaim: media
        globalMounts:
          - path: /media
