---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: bazarr
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      bazarr:
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        containers:
          main:
            image:
              repository: ghcr.io/home-operations/bazarr
              tag: 1.5.3@sha256:2f1c32cb1420b2e56f60cfdf7823737eb501fdb2c13669429d23ab3a02e9ad90
            env:
              BAZARR__APP__INSTANCENAME: Bazarr
              BAZARR__APP__THEME: dark
              BAZARR__AUTH__METHOD: External
              BAZARR__AUTH__REQUIRED: DisabledForLocalAddresses
              BAZARR__LOG__DBENABLED: "False"
              BAZARR__LOG__LEVEL: info
              POSTGRES_ENABLED: "true"
              POSTGRES_HOST:
                valueFrom:
                  secretKeyRef:
                    name: bazarr-db-app
                    key: host
              POSTGRES_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: bazarr-db-app
                    key: username
              POSTGRES_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: bazarr-db-app
                    key: password
              POSTGRES_DATABASE:
                valueFrom:
                  secretKeyRef:
                    name: bazarr-db-app
                    key: dbname
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 6767
                  periodSeconds: 10
                  failureThreshold: 12
                  initialDelaySeconds: 10
                  timeoutSeconds: 1
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 4Gi
    service:
      main:
        controller: bazarr
        ports:
          http:
            port: *port
    route:
      main:
        hostnames:
          - bazarr.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: envoy
            sectionName: https
        rules:
          - backendRefs:
            - identifier: main
              port: *port
    persistence:
      config:
        existingClaim: bazarr
      media:
        type: nfs
        server: 192.168.9.25
        path: /media
        globalMounts:
          - path: /allMedia
