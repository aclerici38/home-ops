---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: actual
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      ${APP}:
        type: statefulset
        strategy: RollingUpdate
        replicas: 2
        annotations:
          secret.reloader.stakater.com/reload: mqtt-secret
        pod:
          hostUsers: false
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            seccompProfile: { type: RuntimeDefault }
          nodeSelector:
            # No ARM image yet
            kubernetes.io/arch: amd64
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app.kubernetes.io/controller
                          operator: In
                          values:
                            - ${APP}
                    topologyKey: kubernetes.io/hostname
        statefulset:
          serviceName:
            identifier: headless
        containers:
          main:
            image:
              repository: docker.io/vernemq/vernemq
              tag: 2.1.1-alpine@sha256:78f6ba747178e00c39b96f7cf7672b8f0f9fc593ffa584b0b34257f670095b89
            env:
              MY_POD_NAME:
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              DOCKER_VERNEMQ_ACCEPT_EULA: 'yes'
              DOCKER_VERNEMQ_DISCOVERY_KUBERNETES: '1'
              DOCKER_VERNEMQ_KUBERNETES_LABEL_SELECTOR: 'app.kubernetes.io/controller=${APP}'
              DOCKER_VERNEMQ_LEVELDB__MAXIMUM_MEMORY: '128000000' # in bytes
              DOCKER_VERNEMQ_LEVELDB__WRITE_BUFFER_SIZE_MIN: '2097152'
              DOCKER_VERNEMQ_LEVELDB__WRITE_BUFFER_SIZE_MAX: '4194304'
              # allow clients to failover when pods are restarting
              DOCKER_VERNEMQ_ALLOW_REGISTER_DURING_NETSPLIT: 'on'
              DOCKER_VERNEMQ_ALLOW_PUBLISH_DURING_NETSPLIT: 'on'
              DOCKER_VERNEMQ_ALLOW_SUBSCRIBE_DURING_NETSPLIT: 'on'
              DOCKER_VERNEMQ_ALLOW_UNSUBSCRIBE_DURING_NETSPLIT: 'on'
              # Creates user dormammu w/ pass from secret
              DOCKER_VERNEMQ_USER_dormammu:
                valueFrom:
                  secretKeyRef:
                    name: mqtt-secret
                    key: mqtt-pass
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health/ping
                    port: &http 8888
                  periodSeconds: 10
                  timeoutSeconds: 5
              readiness: *probes
              startup:
                <<: *probes
                spec:
                  exec:
                    command:
                      # via https://github.com/tholinka/home-ops/blob/main/kubernetes/apps
                      # vernemq immediately reports healthy, even before retained messages are replicated
                      # so we need to make sure all nodes have the same num_replicated on startup
                      # see https://github.com/vernemq/docker-vernemq/issues/255
                      - /bin/sh
                      - -c
                      - >-
                        curl -s localhost:8888/status.json |
                        jq -e '.[0] | [to_entries.[].value.num_retained] | .[0] as $x | all(.[]; . == $x)'
                  periodSeconds: 10
                  timeoutSeconds: 5
            resources:
              requests:
                cpu: 20m
                memory: 128Mi
              limits:
                memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
    service:
      main:
        primary: true
        sessionAffinity: ClientIP # vernemq docs note that hopping between pods causes a significate data replication/sync cost
        ports: &ports
          mqtt:
            port: 1883
          ws:
            port: 8080
      headless:
        publishNotReadyAddresses: true
        clusterIP: None
        ports: *ports
      http:
        ports:
          http:
            port: *http
    route:
      main:
        hostnames:
          - ${APP}.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - matches:
              - path:
                  value: /status.json
            backendRefs: &backendRefs
              - identifier: http
                port: *http
          - matches:
              - path:
                  type: PathPrefix
                  value: /status
            backendRefs: *backendRefs
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs: *backendRefs
            filters:
              - type: URLRewrite
                urlRewrite:
                  path:
                    type: ReplacePrefixMatch
                    replacePrefixMatch: /status
    persistence:
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /vernemq/data
            subPath: data
          - path: /vernemq/log
            subPath: log
          - path: /tmp
            subPath: tmp
    serviceMonitor:
      main:
        serviceName: ${APP}-http
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 10s
            scrapeTimeout: 1s
    serviceAccount:
      ${APP}: {}
    rbac:
      roles:
        ${APP}:
          type: Role
          rules:
            - apiGroups:
                - ''
              resources:
                - pods
              verbs:
                - get
                - list
            - apiGroups:
                - apps
              resources:
                - statefulsets
              verbs:
                - get
      bindings:
        ${APP}:
          type: RoleBinding
          roleRef:
            identifier: ${APP}
          subjects:
            - identifier: ${APP}
