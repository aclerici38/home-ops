---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: grafana
    namespace: flux-system
  install:
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    timeout: 2m
    remediation:
      retries: 1
  values:
    deploymentStrategy:
      type: Recreate
    admin:
      existingSecret: grafana
    env:
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
      GF_SERVER_ROOT_URL: https://grafana.${SECRET_DOMAIN}
    envValueFrom:
      PG_HOST:
        secretKeyRef:
          name: grafana-db-app
          key: host
      PG_USER:
        secretKeyRef:
          name: grafana-db-app
          key: user
      PG_PASS:
        secretKeyRef:
          name: grafana-db-app
          key: password
      PG_DB:
        secretKeyRef:
          name: grafana-db-app
          key: dbname
      BLOCKY_DB_USER:
        secretKeyRef:
          name: blocky-db
          key: user
      BLOCKY_DB_PASS:
        secretKeyRef:
          name: blocky-db
          key: password
      BLOCKY_DB_NAME:
        secretKeyRef:
          name: blocky-db
          key: dbname
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth.anonymous:
        enabled: true
        org_id: 1
        org_name: Main Org.
        org_role: Viewer
      news:
        news_feed_enabled: false
      database:
        type: postgres
        host: $__env{PG_HOST}
        name: $__env{PG_DB}
        user: $__env{PG_USER}
        password: $__env{PG_PASS}
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          - { name: Loki, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://prometheus-operated.observability.svc.cluster.local:9090
            isDefault: true
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-headless.observability.svc.cluster.local:3100
            jsonData:
              maxLines: 500
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://alertmanager-operated.observability.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
          - name: blocky-postgres
            uid: blocky-postgres
            type: postgres
            access: proxy
            url: blocky-db-ro.network.svc.cluster.local:5432
            user: $__env{BLOCKY_DB_USER}
            secureJsonData:
              password: $__env{BLOCKY_DB_PASS}
            jsonData:
              database: $__env{BLOCKY_DB_NAME}
              sslmode: 'disable'
              postgresVersion: 1705
              timescaledb: false
    dashboards:
      default:
        cert-manager:
          url: https://raw.githubusercontent.com/kashalls/home-cluster/refs/heads/main/kubernetes/apps/monitoring/grafana/app/dashboards/cert-manager.json
          datasource: Prometheus
        ceph-cluster:
          # renovate: depName="Ceph Cluster"
          gnetId: 2842
          revision: 18
          datasource: Prometheus
        ceph-osd:
          # renovate: depName="Ceph - OSD (Single)"
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        ceph-pools:
          # renovate: depName="Ceph - Pools"
          gnetId: 5342
          revision: 9
          datasource: Prometheus
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 20
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 21
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 43
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 42
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 39
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 36
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 42
          datasource: Prometheus
        node-feature-discovery:
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        # nut-exporter:
        #   url: https://raw.githubusercontent.com/DRuggeri/nut_exporter/refs/heads/master/dashboard/dashboard.json
        #   datasource: Prometheus
        prometheus:
          # renovate: depName="Prometheus"
          gnetId: 19105
          revision: 7
          datasource: Prometheus
        smartctl-exporter:
          # renovate: depName="SMARTctl Exporter Dashboard"
          gnetId: 22604
          revision: 2
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        volsync:
          # renovate: depName="VolSync Dashboard"
          gnetId: 21356
          revision: 3
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
            - { name: VAR_REPLICATIONDESTNAME, value: .*-dst }
        blocky-postgresql:
          # renovate: depName="Blocky Postgres"
          gnetId: 17996
          revision: 13
          datasource:
            - name: DS_BLOCKY-POSTGRESQL
              value: blocky-postgres
        zfs:
          # renovate: depName="ZFS"
          gnetId: 19376
          revision: 1
        jellyfin:
          url: https://raw.githubusercontent.com/rebelcore/jellyfin_grafana/refs/heads/master/dashboards/jellyfin.json
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        cnpg:
          # renovate: depName="Cloudnative-PG"
          gnetId: 20417
          revision: 4
        pvc-stats:
          # renovate: depName="pvc-stats"
          gnetId: 23233
          revision: 6
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        labelValue: ""
        searchNamespace: ALL
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    route:
      main:
        enabled: true
        apiVersion: gateway.networking.k8s.io/v1
        kind: HTTPRoute
        hostnames:
          - grafana.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: envoy-system
            sectionName: https
        matches:
          - path:
              type: PathPrefix
              value: /
    serviceMonitor:
      enabled: true
    ingress:
      enabled: false
    persistence:
      enabled: false
    testFramework:
      enabled: false
