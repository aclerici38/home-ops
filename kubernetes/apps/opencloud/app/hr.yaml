---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: opencloud
spec:
  interval: 1h
  maxHistory: 1
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  upgrade:
    crds: CreateReplace
    timeout: 2m
    remediation:
      retries: 1
  values:
    controllers:
      ${APP}:
        forceRename: ${APP}
        strategy: RollingUpdate
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        containers:
          main:
            image:
              repository: docker.io/opencloudeu/opencloud-rolling
              tag: 3.5.0@sha256:15963603ee31edf92317dea6ccd420afd9c40caf95d5ebc9901e42eb339789ef
            command:
              - "/bin/sh"
              - "-c"
              - "opencloud init || true; opencloud server"
            env:
              OC_ENABLE_OCM: false
              OC_INSECURE: false
              OC_LOG_LEVEL: warn
              OC_URL: &url https://files.${SECRET_DOMAIN}
              OC_CORS_ALLOW_ORIGINS: *url
              # OC_CACHE_STORE: nats-js-kv
              OC_JWT_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-secret
                    key: JWT_SECRET
              OC_MACHINE_AUTH_API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-secret
                    key: MACHINE_AUTH_API_KEY
              OC_SERVICE_ACCOUNT_ID:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-secret
                    key: SERVICE_ACCOUNT_ID
              OC_SERVICE_ACCOUNT_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-secret
                    key: SERVICE_ACCOUNT_SECRET
              PROXY_TLS: false

              OC_OIDC_ISSUER: id.${SECRET_DOMAIN}
              OC_EXCLUDE_RUN_SERVICES: idp
              PROXY_AUTOPROVISION_ACCOUNTS: true

              # OC_EVENTS_ENDPOINT: &nats nats.nats:4222
              # OC_CACHE_STORE_NODES: *nats
              # OC_EVENTS_CLUSTER: opencloud-cluster

              # MICRO_REGISTRY_ADDRESS: *nats

              NOTIFICATIONS_SMTP_HOST: smtp-relay.smtp-relay
              NOTIFICATIONS_SMTP_PORT: 25
              NOTIFICATIONS_SMTP_SENDER: bot@${SECRET_DOMAIN}
              NOTIFICATIONS_SMTP_INSECURE: true

              STORAGE_USERS_DRIVER: decomposeds3
              STORAGE_USERS_DECOMPOSEDS3_ENDPOINT: http://versity.versity:7070
              STORAGE_USERS_DECOMPOSEDS3_BUCKET: files
              STORAGE_USERS_DECOMPOSEDS3_ACCESS_KEY:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-secret
                    key: S3_ACCESS_KEY
              STORAGE_USERS_DECOMPOSEDS3_SECRET_KEY:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-secret
                    key: S3_SECRET_KEY

              IDM_ADMIN_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: ${APP}-secret
                    key: ADMIN_PASS
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 200m
                memory: 512Mi
              limits:
                memory: 2Gi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    port: &port 9200
                    path: /health
              readiness: *probes
    service:
      main:
        controller: ${APP}
        ports:
          http:
            port: *port
    route:
      main:
        hostnames:
          - ${APP}.${SECRET_DOMAIN}
        parentRefs:
          - name: external
            namespace: envoy
            sectionName: https
        rules:
          - backendRefs:
            - identifier: main
              port: *port
    persistence:
      data:
        existingClaim: ${APP}
        globalMounts:
          - path: /var/lib/opencloud
